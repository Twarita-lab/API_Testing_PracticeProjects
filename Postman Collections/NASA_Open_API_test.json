{
  "info": {
    "_postman_id": "8e1e84af-029a-45b3-98e4-76fa11bca359",
    "name": "NASA Open APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "Astronomy Picture of the Day_ResultCountBased on Start Date",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "607c85e3-db48-420a-8289-a0bfd0a1f763",
            "exec": [
              "pm.environment.get(\"api_key\");"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "98107079-95fb-4656-a713-b72334608beb",
            "exec": [
              "//Status code valoidation\r",
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "\r",
              "var jsonData = pm.response.json();\r",
              "//Validate copyright field is available\r",
              "pm.test(\"Copyright value present\", function () {\r",
              "    pm.expect(jsonData).haveOwnProperty(\"copyright\")\r",
              "    console.log(\"Copyright entitled to \"+jsonData.copyright)\r",
              "});\r",
              "\r",
              "//Validate date is current date\r",
              "const moment = require(\"moment\")\r",
              "let Today = moment().format(\"YYYY-MM-DD\")\r",
              "pm.test(\"Date is Current date\", function(){\r",
              "    pm.expect(jsonData.date).to.equal(Today)\r",
              "    console.log(\"date is \"+jsonData.date)\r",
              "\r",
              "});\r",
              "\r",
              "//Validate Explanation field is available\r",
              "pm.test(\"Explanation value present\", function () {\r",
              "    pm.expect(jsonData).haveOwnProperty(\"explanation\")\r",
              "    console.log(\"Explanation is \"+jsonData.explanation)\r",
              "});\r",
              "\r",
              "//validate HD URL is Present if media type is image\r",
              "pm.test(\"HD URL is Present for Image\", function () {\r",
              "    if(jsonData.media_type==\"image\"){\r",
              "        pm.expect(jsonData).haveOwnProperty(\"hdurl\")\r",
              "        console.log(\"HD URL is \"+jsonData.hdurl)\r",
              "    }\r",
              "    else{\r",
              "        pm.expect(jsonData).haveOwnProperty(\"thumbnail_url\")\r",
              "        console.log(\"Thumbnail url is \"+jsonData.thumbnail_url)\r",
              "    }\r",
              "});\r",
              "\r",
              "//Validate Title field is available\r",
              "pm.test(\"Title value present\", function () {\r",
              "    pm.expect(jsonData).haveOwnProperty(\"title\")\r",
              "    console.log(\"Title is \"+jsonData.title)\r",
              "});\r",
              "\r",
              "//Validate url field is available\r",
              "pm.test(\"URL value present\", function () {\r",
              "    pm.expect(jsonData).haveOwnProperty(\"url\")\r",
              "    console.log(\"URL value is \"+jsonData.url)\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "a8038681-e5c5-492e-a82b-a2aacf3c255b",
      "protocolProfileBehavior": {
        "disableBodyPruning": true,
        "followAuthorizationHeader": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": {
            "value": "{{api_key}}",
            "key": "api_key",
            "in": "query"
          }
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "https://api.nasa.gov/planetary/apod?thumbs=True",
          "protocol": "https",
          "host": [
            "api",
            "nasa",
            "gov"
          ],
          "path": [
            "planetary",
            "apod"
          ],
          "query": [
            {
              "key": "date",
              "value": "2022-02-16",
              "disabled": true
            },
            {
              "key": "start_date",
              "value": "2022-02-01",
              "description": "The start of a date range, when requesting date for a range of dates. Cannot be used with date.",
              "disabled": true
            },
            {
              "key": "end_date",
              "value": "2022-02-17",
              "description": "The end of the date range, when used with start_date.",
              "disabled": true
            },
            {
              "key": "count",
              "value": "2",
              "description": "If this is specified then count randomly chosen images will be returned. Cannot be used with date or start_date and end_date.",
              "type": "text",
              "disabled": true
            },
            {
              "key": "thumbs",
              "value": "True",
              "description": "Return the URL of video thumbnail. If an APOD is not a video, this parameter is ignored."
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Astronomy Picture of the Day_General testcases Copy",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "afc25a4b-9b8c-42cf-962d-1a1e778f3ef2",
            "exec": [
              "pm.environment.get(\"api_key\");"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "1e19e3f0-179e-498c-9b28-52f7ab097e0d",
            "exec": [
              "//Status code valoidation\r",
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "\r",
              "var jsonData = pm.response.json();\r",
              "//Validate copyright field is available\r",
              "pm.test(\"Copyright value present\", function () {\r",
              "    pm.expect(jsonData).haveOwnProperty(\"copyright\")\r",
              "    console.log(\"Copyright entitled to \"+jsonData.copyright)\r",
              "});\r",
              "\r",
              "//Validate date is current date\r",
              "const moment = require(\"moment\")\r",
              "let Today = moment().format(\"YYYY-MM-DD\")\r",
              "pm.test(\"Date is Current date\", function(){\r",
              "    pm.expect(jsonData.date).to.equal(Today)\r",
              "    console.log(\"date is \"+jsonData.date)\r",
              "\r",
              "});\r",
              "\r",
              "//Validate Explanation field is available\r",
              "pm.test(\"Explanation value present\", function () {\r",
              "    pm.expect(jsonData).haveOwnProperty(\"explanation\")\r",
              "    console.log(\"Explanation is \"+jsonData.explanation)\r",
              "});\r",
              "\r",
              "//validate HD URL is Present if media type is image\r",
              "pm.test(\"HD URL is Present for Image\", function () {\r",
              "    if(jsonData.media_type==\"image\"){\r",
              "        pm.expect(jsonData).haveOwnProperty(\"hdurl\")\r",
              "        console.log(\"HD URL is \"+jsonData.hdurl)\r",
              "    }\r",
              "    else{\r",
              "        pm.expect(jsonData).haveOwnProperty(\"thumbnail_url\")\r",
              "        console.log(\"Thumbnail url is \"+jsonData.thumbnail_url)\r",
              "    }\r",
              "});\r",
              "\r",
              "//Validate Title field is available\r",
              "pm.test(\"Title value present\", function () {\r",
              "    pm.expect(jsonData).haveOwnProperty(\"title\")\r",
              "    console.log(\"Title is \"+jsonData.title)\r",
              "});\r",
              "\r",
              "//Validate url field is available\r",
              "pm.test(\"URL value present\", function () {\r",
              "    pm.expect(jsonData).haveOwnProperty(\"url\")\r",
              "    console.log(\"URL value is \"+jsonData.url)\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "d365ab91-0731-4d78-a0b1-4b631aab0092",
      "protocolProfileBehavior": {
        "disableBodyPruning": true,
        "followAuthorizationHeader": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": {
            "value": "{{api_key}}",
            "key": "api_key",
            "in": "query"
          }
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "https://api.nasa.gov/planetary/apod?thumbs=True",
          "protocol": "https",
          "host": [
            "api",
            "nasa",
            "gov"
          ],
          "path": [
            "planetary",
            "apod"
          ],
          "query": [
            {
              "key": "date",
              "value": "2022-02-16",
              "disabled": true
            },
            {
              "key": "start_date",
              "value": "2022-02-01",
              "description": "The start of a date range, when requesting date for a range of dates. Cannot be used with date.",
              "disabled": true
            },
            {
              "key": "end_date",
              "value": "2022-02-17",
              "description": "The end of the date range, when used with start_date.",
              "disabled": true
            },
            {
              "key": "count",
              "value": "2",
              "description": "If this is specified then count randomly chosen images will be returned. Cannot be used with date or start_date and end_date.",
              "type": "text",
              "disabled": true
            },
            {
              "key": "thumbs",
              "value": "True",
              "description": "Return the URL of video thumbnail. If an APOD is not a video, this parameter is ignored."
            }
          ]
        }
      },
      "response": [
        {
          "id": "2f6118e7-1354-4f12-a616-2448af7a859f",
          "name": "Astronomy Picture of the Day_General testcases",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{APOD}}?thumbs=True",
              "host": [
                "{{APOD}}"
              ],
              "query": [
                {
                  "key": "date",
                  "value": "2022-02-16",
                  "disabled": true
                },
                {
                  "key": "start_date",
                  "value": "2022-02-01",
                  "description": "The start of a date range, when requesting date for a range of dates. Cannot be used with date.",
                  "disabled": true
                },
                {
                  "key": "end_date",
                  "value": "2022-02-17",
                  "description": "The end of the date range, when used with start_date.",
                  "disabled": true
                },
                {
                  "key": "count",
                  "value": "2",
                  "description": "If this is specified then count randomly chosen images will be returned. Cannot be used with date or start_date and end_date.",
                  "type": "text",
                  "disabled": true
                },
                {
                  "key": "thumbs",
                  "value": "True",
                  "description": "Return the URL of video thumbnail. If an APOD is not a video, this parameter is ignored."
                }
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Date",
              "value": "Thu, 17 Feb 2022 10:07:20 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "2000"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "1966"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": "X-RateLimit-Limit, X-RateLimit-Remaining"
            },
            {
              "key": "Age",
              "value": "0"
            },
            {
              "key": "Via",
              "value": "http/1.1 api-umbrella (ApacheTrafficServer [cMsSf ])"
            },
            {
              "key": "X-Cache",
              "value": "MISS"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; preload"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            }
          ],
          "cookie": [],
          "responseTime": null,
          "body": "{\n    \"copyright\": \"Robert Eder\",\n    \"date\": \"2022-02-17\",\n    \"explanation\": \"Dark markings and bright nebulae in this telescopic southern sky view are telltale signs of young stars and active star formation. They lie a mere 650 light-years away, at the boundary of the local bubble and the Chamaeleon molecular cloud complex. Regions with young stars identified as dusty reflection nebulae from the 1946 Cederblad catalog include the C-shaped Ced 110 just above and left of center, and bluish Ced 111 below it. Also a standout in the frame, the orange tinted V-shape of the Chamaeleon Infrared Nebula (Cha IRN) was carved by material streaming from a newly formed low-mass star.  The well-composed image spans 1.5 degrees. That's about 17 light-years at the estimated distance of the nearby Chamaeleon I molecular cloud.\",\n    \"hdurl\": \"https://apod.nasa.gov/apod/image/2202/Chamaeleon_RobertEder.jpg\",\n    \"media_type\": \"image\",\n    \"service_version\": \"v1\",\n    \"title\": \"Chamaeleon I Molecular Cloud\",\n    \"url\": \"https://apod.nasa.gov/apod/image/2202/Chamaeleon_RobertEder1024.jpg\"\n}"
        }
      ]
    },
    {
      "name": "Astronomy Picture of the Day_Date Validation",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "b5b717f8-77e7-4a28-88ba-6c2b34ad7df1",
            "exec": [
              "pm.environment.get(\"api_key\");"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "401ac7b1-3eab-4dcf-8603-4b81213e8c52",
            "exec": [
              "var jsonData = pm.response.json();\r",
              "let requestBody = pm.request.toJSON();\r",
              "const moment = require(\"moment\")\r",
              "//Validate date is requested date\r",
              "pm.test(\"Date is rquested date\", function () {\r",
              "    console.log(jsonData.date)\r",
              "    let requestedDate = pm.request.url.query.toString().split(\"&\")[0].split(\"=\")[1]\r",
              "   pm.expect(jsonData.date).to.equal(requestedDate)\r",
              "});\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "0a83cdc4-6d31-4a19-9a35-6513181f2864",
      "protocolProfileBehavior": {
        "disableBodyPruning": true,
        "followAuthorizationHeader": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": {
            "value": "{{api_key}}",
            "key": "api_key",
            "in": "query"
          }
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{APOD}}?date=2021-02-16",
          "host": [
            "{{APOD}}"
          ],
          "query": [
            {
              "key": "date",
              "value": "2021-02-16"
            },
            {
              "key": "start_date",
              "value": "2022-02-01",
              "description": "The start of a date range, when requesting date for a range of dates. Cannot be used with date.",
              "disabled": true
            },
            {
              "key": "end_date",
              "value": "2022-02-17",
              "description": "The end of the date range, when used with start_date.",
              "disabled": true
            },
            {
              "key": "count",
              "value": "2",
              "description": "If this is specified then count randomly chosen images will be returned. Cannot be used with date or start_date and end_date.",
              "type": "text",
              "disabled": true
            },
            {
              "key": "thumbs",
              "value": "True",
              "disabled": true
            }
          ]
        }
      },
      "response": [
        {
          "id": "89c846c0-1777-43e2-b85e-8528ce701e2f",
          "name": "Astronomy Picture of the Day_Date Validation",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{APOD}}?date=2021-02-16",
              "host": [
                "{{APOD}}"
              ],
              "query": [
                {
                  "key": "date",
                  "value": "2021-02-16"
                },
                {
                  "key": "start_date",
                  "value": "2022-02-01",
                  "description": "The start of a date range, when requesting date for a range of dates. Cannot be used with date.",
                  "disabled": true
                },
                {
                  "key": "end_date",
                  "value": "2022-02-17",
                  "description": "The end of the date range, when used with start_date.",
                  "disabled": true
                },
                {
                  "key": "count",
                  "value": "2",
                  "description": "If this is specified then count randomly chosen images will be returned. Cannot be used with date or start_date and end_date.",
                  "type": "text",
                  "disabled": true
                },
                {
                  "key": "thumbs",
                  "value": "True",
                  "description": "Return the URL of video thumbnail. If an APOD is not a video, this parameter is ignored.",
                  "disabled": true
                }
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Date",
              "value": "Thu, 17 Feb 2022 11:21:37 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "2000"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "1945"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": "X-RateLimit-Limit, X-RateLimit-Remaining"
            },
            {
              "key": "Age",
              "value": "0"
            },
            {
              "key": "Via",
              "value": "http/1.1 api-umbrella (ApacheTrafficServer [cMsSf ])"
            },
            {
              "key": "X-Cache",
              "value": "MISS"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; preload"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            }
          ],
          "cookie": [],
          "responseTime": null,
          "body": "{\n    \"date\": \"2021-02-16\",\n    \"explanation\": \"How hard is it to land safely on Mars? So hard that many more attempts have failed than succeeded.  The next attempt will be on Thursday. The main problem is that the Martian atmosphere is too thick to ignore -- or it will melt your spacecraft.  On the other hand, the atmosphere is too thin to rely on parachutes -- or your spacecraft will crash land.  Therefore, as outlined in the featured video, the Perseverance lander will lose much of its high speed by deploying a huge parachute, but then switch to rockets, and finally, assuming everything goes right, culminate with a hovering Sky Crane that will slowly lower the car-sized Perseverance rover to the surface with ropes.  It may sound crazy, but the Curiosity rover was placed on Mars using a similar method in 2012.  From atmospheric entry to surface touch-down takes about seven minutes, all coordinated by an onboard computer because Mars is too far away for rapid interactive communication.  During this time, humans on Earth will simply wait to hear if the landing was successful. Last week, UAE's Hope spacecraft successfully began orbiting Mars, followed a day later by the Chinese Tianwen-1 mission, which will likely schedule a landing of its own rover sometime in the next few months.    News: NASA Perseverance Coverage\",\n    \"media_type\": \"video\",\n    \"service_version\": \"v1\",\n    \"title\": \"Perseverance: Seven Minutes to Mars\",\n    \"url\": \"https://www.youtube.com/embed/M4tdMR5HLtg?rel=0\"\n}"
        }
      ]
    }
  ]
}